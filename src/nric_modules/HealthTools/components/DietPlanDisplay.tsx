import React, { useState } from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  ScrollView,
  StyleSheet,
} from 'react-native';
import Icon from 'react-native-vector-icons/MaterialCommunityIcons';
import { DietPlan,FoodItem } from '../types/diet';

interface DietPlanDisplayProps {
  route: {
    params: {
      dietPlan: DietPlan;
    };
  };
  navigation: any;
}

const DietPlanDisplay: React.FC<DietPlanDisplayProps> = ({
  route,
  navigation,
}) => {
  const { dietPlan } = route.params;
  const [selectedDay, setSelectedDay] = useState('Monday');
  const [expandedSections, setExpandedSections] = useState({
    overview: true,
    mealPlan: true,
    recommendations: false,
    supplements: false,
    tips: false,
  });

  type SectionKey =
    | 'overview'
    | 'mealPlan'
    | 'recommendations'
    | 'supplements'
    | 'tips';

  const toggleSection = (section: SectionKey) => {
    setExpandedSections(prev => ({
      ...prev,
      [section]: !prev[section],
    }));
  };

  const weekDays = [
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday',
    'Sunday',
  ];
 
  const calculateBMI = () => {
    const heightInM = dietPlan.profile.height / 100;
    return (dietPlan.profile.weight / (heightInM * heightInM)).toFixed(1);
  };

  const getBMICategory = (bmi: number) => {
    if (bmi < 18.5) return { category: 'Underweight', color: '#3B82F6' };
    if (bmi < 25) return { category: 'Normal', color: '#10B981' };
    if (bmi < 30) return { category: 'Overweight', color: '#F59E0B' };
    return { category: 'Obese', color: '#EF4444' };
  };

  const bmi = parseFloat(calculateBMI());
  const bmiInfo = getBMICategory(bmi);

  return (
    <ScrollView contentContainerStyle={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <View style={styles.headerContent}>
          <Text style={styles.headerTitle}>Your Personalized Diet Plan</Text>
          <Text style={styles.headerSubtitle}>
            Generated by AI based on your health profile and goals
          </Text>
        </View>
        <TouchableOpacity
          onPress={() => navigation.goBack()}
          style={styles.backButton}
        >
          <Icon name="arrow-left" size={20} color="white" />
          <Text style={styles.backButtonText}>Back to Form</Text>
        </TouchableOpacity>
      </View>

      {/* Profile Overview */}
      <View style={styles.card}>
        <TouchableOpacity
          onPress={() => toggleSection('overview')}
          style={styles.cardHeader}
        >
          <View style={styles.cardHeaderContent}>
            <Icon name="account" size={20} color="#10B981" />
            <Text style={styles.cardTitle}>Profile Overview</Text>
          </View>
          <Icon
            name={expandedSections.overview ? 'chevron-down' : 'chevron-right'}
            size={20}
            color="#6B7280"
          />
        </TouchableOpacity>

        {expandedSections.overview && (
          <View style={styles.cardBody}>
            <View style={styles.grid}>
              <View style={[styles.gridItem, styles.gridItemBlue]}>
                <View style={styles.gridItemHeader}>
                  <Icon name="account" size={16} color="#3B82F6" />
                  <Text style={styles.gridItemTitle}>Basic Info</Text>
                </View>
                <View style={styles.gridItemContent}>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.name}
                  </Text>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.age} years old
                  </Text>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.gender}
                  </Text>
                  <Text style={styles.gridItemText}>
                    BMI: {calculateBMI()} ({bmiInfo.category})
                  </Text>
                </View>
              </View>

              <View style={[styles.gridItem, styles.gridItemGreen]}>
                <View style={styles.gridItemHeader}>
                  <Icon name="target" size={16} color="#10B981" />
                  <Text style={styles.gridItemTitle}>Goals</Text>
                </View>
                <View style={styles.gridItemContent}>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.goal?.replace('_', ' ')}
                  </Text>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.height} cm
                  </Text>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.weight} kg
                  </Text>
                  {dietPlan.profile.targetWeight && (
                    <Text style={styles.gridItemText}>
                      Target: {dietPlan.profile.targetWeight} kg
                    </Text>
                  )}
                </View>
              </View>

              <View style={[styles.gridItem, styles.gridItemPurple]}>
                <View style={styles.gridItemHeader}>
                  <Icon name="run" size={16} color="#8B5CF6" />
                  <Text style={styles.gridItemTitle}>Activity</Text>
                </View>
                <View style={styles.gridItemContent}>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.activityLevel?.replace('_', ' ')}
                  </Text>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.mealsPerDay} meals/day
                  </Text>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.waterIntake} glasses water
                  </Text>
                </View>
              </View>

              <View style={[styles.gridItem, styles.gridItemRed]}>
                <View style={styles.gridItemHeader}>
                  <Icon name="heart-pulse" size={16} color="#EF4444" />
                  <Text style={styles.gridItemTitle}>Health</Text>
                </View>
                <View style={styles.gridItemContent}>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.medicalConditions?.length || 0} conditions
                  </Text>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.allergies?.length || 0} allergies
                  </Text>
                  <Text style={styles.gridItemText}>
                    {dietPlan.profile.vitaminDeficiencies?.length || 0}{' '}
                    deficiencies
                  </Text>
                </View>
              </View>
            </View>
          </View>
        )}
      </View>

      {/* Nutritional Needs */}
      <View style={styles.nutritionCard}>
        <View style={styles.nutritionHeader}>
          <Icon name="target" size={20} color="#10B981" />
          <Text style={styles.nutritionTitle}>Daily Nutritional Targets</Text>
        </View>

        <View style={styles.nutritionGrid}>
          <View style={[styles.nutritionItem, styles.nutritionItemRed]}>
            <Text style={styles.nutritionValue}>
              {dietPlan.nutritionalNeeds.calories}
            </Text>
            <Text style={styles.nutritionLabel}>Calories</Text>
          </View>
          <View style={[styles.nutritionItem, styles.nutritionItemBlue]}>
            <Text style={styles.nutritionValue}>
              {dietPlan.nutritionalNeeds.protein}g
            </Text>
            <Text style={styles.nutritionLabel}>Protein</Text>
          </View>
          <View style={[styles.nutritionItem, styles.nutritionItemGreen]}>
            <Text style={styles.nutritionValue}>
              {dietPlan.nutritionalNeeds.carbs}g
            </Text>
            <Text style={styles.nutritionLabel}>Carbs</Text>
          </View>
          <View style={[styles.nutritionItem, styles.nutritionItemYellow]}>
            <Text style={styles.nutritionValue}>
              {dietPlan.nutritionalNeeds.fat}g
            </Text>
            <Text style={styles.nutritionLabel}>Fats</Text>
          </View>
        </View>

        <View style={styles.nutritionGridSecondary}>
          <View
            style={[styles.nutritionItemSecondary, styles.nutritionItemPurple]}
          >
            <Text style={styles.nutritionValueSecondary}>
              {dietPlan.nutritionalNeeds.fiber}g
            </Text>
            <Text style={styles.nutritionLabelSecondary}>Fiber</Text>
          </View>
          <View
            style={[styles.nutritionItemSecondary, styles.nutritionItemCyan]}
          >
            <View style={styles.waterItem}>
              <Icon name="water" size={16} color="#06B6D4" />
              <Text style={styles.nutritionValueSecondary}>
                {dietPlan.nutritionalNeeds.water}L
              </Text>
            </View>
            <Text style={styles.nutritionLabelSecondary}>Water</Text>
          </View>
        </View>
      </View>

      {/* Weekly Meal Plan */}
      <View style={styles.card}>
        <TouchableOpacity
          onPress={() => toggleSection('mealPlan')}
          style={styles.cardHeader}
        >
          <View style={styles.cardHeaderContent}>
            <Icon name="calendar" size={20} color="#3B82F6" />
            <Text style={styles.cardTitle}>Weekly Meal Plan</Text>
          </View>
          <Icon
            name={expandedSections.mealPlan ? 'chevron-down' : 'chevron-right'}
            size={20}
            color="#6B7280"
          />
        </TouchableOpacity>

        {expandedSections.mealPlan && (
          <View style={styles.cardBody}>
            {/* Day Selector */}
            <View style={styles.daySelector}>
              <ScrollView horizontal showsHorizontalScrollIndicator={false}>
                {weekDays.map(day => (
                  <TouchableOpacity
                    key={day}
                    onPress={() => setSelectedDay(day)}
                    style={[
                      styles.dayButton,
                      selectedDay === day && styles.dayButtonActive,
                    ]}
                  >
                    <Text
                      style={[
                        styles.dayButtonText,
                        selectedDay === day && styles.dayButtonTextActive,
                      ]}
                    >
                      {day}
                    </Text>
                  </TouchableOpacity>
                ))}
              </ScrollView>
            </View>

            {/* Meal Details */}
            <View style={styles.mealContainer}>
             {Object.entries(dietPlan.weeklyMealPlan[selectedDay]).map(
                ([mealType, foods]: [string, FoodItem[]]) => (
                  <View key={mealType} style={styles.mealCard}>
                    <View style={styles.mealHeader}>
                      <Icon name="silverware" size={18} color="#10B981" />
                      <Text style={styles.mealTitle}>{mealType}</Text>
                    </View>
                    <View style={styles.foodGrid}>
                      {foods.map((food: FoodItem, index: number) => (
                        <View key={index} style={styles.foodItem}>
                          <Text style={styles.foodName}>{food.name}</Text>
                          <Text style={styles.foodPortion}>{food.portion}</Text>
                          <View style={styles.nutritionGridSmall}>
                            <View style={styles.nutritionItemSmall}>
                              <Text style={styles.nutritionLabelSmall}>
                                Calories
                              </Text>
                              <Text style={styles.nutritionValueSmall}>
                                {food.calories}
                              </Text>
                            </View>
                            <View style={styles.nutritionItemSmall}>
                              <Text style={styles.nutritionLabelSmall}>
                                Protein
                              </Text>
                              <Text style={styles.nutritionValueSmall}>
                                {food.protein}g
                              </Text>
                            </View>
                            <View style={styles.nutritionItemSmall}>
                              <Text style={styles.nutritionLabelSmall}>
                                Carbs
                              </Text>
                              <Text style={styles.nutritionValueSmall}>
                                {food.carbs}g
                              </Text>
                            </View>
                            <View style={styles.nutritionItemSmall}>
                              <Text style={styles.nutritionLabelSmall}>
                                Fat
                              </Text>
                              <Text style={styles.nutritionValueSmall}>
                                {food.fat}g
                              </Text>
                            </View>
                          </View>
                          {food.benefits.length > 0 && (
                            <View style={styles.benefitsContainer}>
                              <Text style={styles.benefitsLabel}>
                                Benefits:{' '}
                              </Text>
                              <Text style={styles.benefitsText}>
                                {food.benefits.join(', ')}
                              </Text>
                            </View>
                          )}
                        </View>
                      ))}
                    </View>
                  </View>
                ),
              )}
            </View>
          </View>
        )}
      </View>

      {/* Food Recommendations for Deficiencies */}
      {dietPlan.recommendedFoods.length > 0 && (
        <View style={styles.card}>
          <TouchableOpacity
            onPress={() => toggleSection('recommendations')}
            style={styles.cardHeader}
          >
            <View style={styles.cardHeaderContent}>
              <Icon name="heart-pulse" size={20} color="#EF4444" />
              <Text style={styles.cardTitle}>Foods for Your Deficiencies</Text>
            </View>
            <Icon
              name={
                expandedSections.recommendations
                  ? 'chevron-down'
                  : 'chevron-right'
              }
              size={20}
              color="#6B7280"
            />
          </TouchableOpacity>

          {expandedSections.recommendations && (
            <View style={styles.cardBody}>
              <View style={styles.recommendedFoodsGrid}>
                {dietPlan.recommendedFoods.map((food, index) => (
                  <View key={index} style={styles.recommendedFoodItem}>
                    <Text style={styles.recommendedFoodName}>{food.name}</Text>
                    <View style={styles.recommendedFoodContent}>
                      <Text style={styles.recommendedFoodText}>
                        Rich in:{' '}
                        {food.vitamins.concat(food.minerals).join(', ')}
                      </Text>
                      <Text style={styles.recommendedFoodText}>
                        Benefits: {food.benefits.join(', ')}
                      </Text>
                    </View>
                    <View style={styles.recommendedFoodPortion}>
                      <Text style={styles.recommendedFoodPortionText}>
                        {food.portion}
                      </Text>
                    </View>
                  </View>
                ))}
              </View>
            </View>
          )}
        </View>
      )}

      {/* Supplements */}
      {dietPlan.supplementsNeeded.length > 0 && (
        <View style={styles.card}>
          <TouchableOpacity
            onPress={() => toggleSection('supplements')}
            style={styles.cardHeader}
          >
            <View style={styles.cardHeaderContent}>
              <Icon name="pill" size={20} color="#8B5CF6" />
              <Text style={styles.cardTitle}>Recommended Supplements</Text>
            </View>
            <Icon
              name={
                expandedSections.supplements ? 'chevron-down' : 'chevron-right'
              }
              size={20}
              color="#6B7280"
            />
          </TouchableOpacity>

          {expandedSections.supplements && (
            <View style={styles.cardBody}>
              <View style={styles.warningBox}>
                <Icon name="alert-circle" size={20} color="#8B5CF6" />
                <Text style={styles.warningText}>
                  Important: Consult with a healthcare provider before starting
                  any supplements.
                </Text>
              </View>
              <View style={styles.supplementsList}>
                {dietPlan.supplementsNeeded.map((supplement, index) => (
                  <View key={index} style={styles.supplementItem}>
                    <Icon name="pill" size={16} color="#8B5CF6" />
                    <Text style={styles.supplementText}>{supplement}</Text>
                  </View>
                ))}
              </View>
            </View>
          )}
        </View>
      )}

      {/* Tips and Warnings */}
      <View style={styles.tipsWarningsContainer}>
        {/* Tips */}
        {/* <View style={[styles.card, { flex: 1 }]}> */}
          {/* <TouchableOpacity
            onPress={() => toggleSection('tips')}
            style={styles.cardHeader}
          >
            <View style={styles.cardHeaderContent}>
              <Icon name="lightbulb-on" size={20} color="#F59E0B" />
              <Text style={styles.cardTitle}>Helpful Tips</Text>
            </View>
            <Icon
              name={expandedSections.tips ? 'chevron-down' : 'chevron-right'}
              size={20}
              color="#6B7280"
            />
          </TouchableOpacity> */}

          {expandedSections.tips && (
            <View style={styles.cardBody}>
              <View style={styles.tipsList}>
                {dietPlan.tips.map((tip, index) => (
                  <View key={index} style={styles.tipItem}>
                    <Icon name="lightbulb-on" size={16} color="#F59E0B" />
                    <Text style={styles.tipText}>{tip}</Text>
                  </View>
                ))}
              </View>
            </View>
          )}
        </View>

        {/* Warnings */}
        <View style={[styles.card, { flex: 1 }]}>
          <View style={styles.cardHeader}>
            <View style={styles.cardHeaderContent}>
              <Icon name="alert-circle" size={20} color="#EF4444" />
              <Text style={styles.cardTitle}>Important Warnings</Text>
            </View>
          </View>
          <View style={styles.cardBody}>
            <View style={styles.warningsList}>
              {dietPlan.warnings.map((warning, index) => (
                <View key={index} style={styles.warningItem}>
                  <Icon name="alert-circle" size={16} color="#EF4444" />
                  <Text style={styles.warningItemText}>{warning}</Text>
                </View>
              ))}
            </View>
          </View>
        </View>
      {/* </View> */}
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    padding: 16,
    paddingBottom: 32,
  },
  header: {
    backgroundColor: '#10B981',
    borderRadius: 12,
    padding: 20,
    marginBottom: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  headerContent: {
    marginBottom: 16,
  },
  headerTitle: {
    fontSize: 22,
    fontWeight: 'bold',
    color: 'white',
    marginBottom: 8,
  },
  headerSubtitle: {
    fontSize: 14,
    color: '#D1FAE5',
  },
  backButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: 'rgba(255, 255, 255, 0.2)',
    borderRadius: 8,
    padding: 12,
    justifyContent: 'center',
  },
  backButtonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: '600',
    marginLeft: 8,
  },
  card: {
    backgroundColor: 'white',
    borderRadius: 12,
    marginBottom: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 2,
  },
  cardHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 16,
  },
  cardHeaderContent: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  cardTitle: {
    fontSize: 18,
    fontWeight: '600',
    marginLeft: 8,
    color: '#111827',
  },
  cardBody: {
    padding: 16,
    borderTopWidth: 1,
    borderTopColor: '#E5E7EB',
  },
  grid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
    marginBottom: -12,
  },
  gridItem: {
    width: '48%',
    borderRadius: 8,
    padding: 12,
    marginBottom: 12,
  },
  gridItemBlue: {
    backgroundColor: '#EFF6FF',
  },
  gridItemGreen: {
    backgroundColor: '#ECFDF5',
  },
  gridItemPurple: {
    backgroundColor: '#F5F3FF',
  },
  gridItemRed: {
    backgroundColor: '#FEF2F2',
  },
  gridItemHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 8,
  },
  gridItemTitle: {
    fontSize: 14,
    fontWeight: '600',
    marginLeft: 8,
  },
  gridItemContent: {
    marginLeft: 24,
  },
  gridItemText: {
    fontSize: 12,
    color: '#4B5563',
    marginBottom: 4,
  },
  nutritionCard: {
    backgroundColor: 'white',
    borderRadius: 12,
    padding: 16,
    marginBottom: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 2,
  },
  nutritionHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 16,
  },
  nutritionTitle: {
    fontSize: 18,
    fontWeight: '600',
    marginLeft: 8,
    color: '#111827',
  },
  nutritionGrid: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 8,
  },
  nutritionItem: {
    width: '23%',
    borderRadius: 8,
    padding: 12,
    alignItems: 'center',
  },
  nutritionItemRed: {
    backgroundColor: '#FEE2E2',
  },
  nutritionItemBlue: {
    backgroundColor: '#DBEAFE',
  },
  nutritionItemGreen: {
    backgroundColor: '#D1FAE5',
  },
  nutritionItemYellow: {
    backgroundColor: '#FEF3C7',
  },
  nutritionValue: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 4,
  },
  nutritionLabel: {
    fontSize: 12,
    fontWeight: '500',
  },
  nutritionGridSecondary: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 8,
  },
  nutritionItemSecondary: {
    width: '48%',
    borderRadius: 8,
    padding: 12,
    alignItems: 'center',
  },
  nutritionItemPurple: {
    backgroundColor: '#EDE9FE',
  },
  nutritionItemCyan: {
    backgroundColor: '#CFFAFE',
  },
  nutritionValueSecondary: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 4,
  },
  nutritionLabelSecondary: {
    fontSize: 12,
    fontWeight: '500',
  },
  waterItem: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  daySelector: {
    marginBottom: 16,
  },
  dayButton: {
    backgroundColor: 'white',
    borderRadius: 8,
    paddingHorizontal: 16,
    paddingVertical: 8,
    marginRight: 8,
    borderWidth: 1,
    borderColor: '#E5E7EB',
  },
  dayButtonActive: {
    backgroundColor: '#3B82F6',
    borderColor: '#3B82F6',
  },
  dayButtonText: {
    color: '#4B5563',
    fontWeight: '500',
  },
  dayButtonTextActive: {
    color: 'white',
  },
  mealContainer: {
    marginTop: 8,
  },
  mealCard: {
    borderWidth: 1,
    borderColor: '#E5E7EB',
    borderRadius: 8,
    padding: 12,
    marginBottom: 12,
  },
  mealHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  mealTitle: {
    fontSize: 16,
    fontWeight: '600',
    marginLeft: 8,
    color: '#111827',
  },
  foodGrid: {
    marginBottom: -12,
  },
  foodItem: {
    backgroundColor: '#F9FAFB',
    borderRadius: 8,
    padding: 12,
    marginBottom: 12,
  },
  foodName: {
    fontSize: 14,
    fontWeight: '600',
    color: '#111827',
    marginBottom: 4,
  },
  foodPortion: {
    fontSize: 12,
    color: '#6B7280',
    marginBottom: 8,
  },
  nutritionGridSmall: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 8,
  },
  nutritionItemSmall: {
    width: '23%',
  },
  nutritionLabelSmall: {
    fontSize: 10,
    color: '#6B7280',
  },
  nutritionValueSmall: {
    fontSize: 12,
    fontWeight: '600',
    color: '#111827',
  },
  benefitsContainer: {
    flexDirection: 'row',
  },
  benefitsLabel: {
    fontSize: 10,
    fontWeight: '600',
    color: '#10B981',
  },
  benefitsText: {
    fontSize: 10,
    color: '#6B7280',
  },
  recommendedFoodsGrid: {
    marginBottom: -12,
  },
  recommendedFoodItem: {
    backgroundColor: '#FFEDD5',
    borderRadius: 8,
    padding: 12,
    marginBottom: 12,
    borderWidth: 1,
    borderColor: '#FED7AA',
  },
  recommendedFoodName: {
    fontSize: 14,
    fontWeight: '600',
    color: '#9A3412',
    marginBottom: 4,
  },
  recommendedFoodContent: {
    marginBottom: 8,
  },
  recommendedFoodText: {
    fontSize: 12,
    color: '#9A3412',
  },
  recommendedFoodPortion: {
    backgroundColor: '#FDBA74',
    borderRadius: 4,
    paddingHorizontal: 8,
    paddingVertical: 4,
    alignSelf: 'flex-start',
  },
  recommendedFoodPortionText: {
    fontSize: 10,
    color: '#9A3412',
    fontWeight: '600',
  },
  warningBox: {
    backgroundColor: '#F5F3FF',
    borderRadius: 8,
    padding: 12,
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
    borderWidth: 1,
    borderColor: '#DDD6FE',
  },
  warningText: {
    fontSize: 12,
    color: '#5B21B6',
    marginLeft: 8,
    flex: 1,
  },
  supplementsList: {
    marginBottom: -8,
  },
  supplementItem: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 8,
    backgroundColor: '#F5F3FF',
    borderRadius: 8,
    marginBottom: 8,
  },
  supplementText: {
    fontSize: 12,
    color: '#5B21B6',
    marginLeft: 8,
  },
  tipsWarningsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 16,
  },
  tipsList: {
    marginBottom: -8,
  },
  tipItem: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    padding: 8,
    backgroundColor: '#FEF3C7',
    borderRadius: 8,
    marginBottom: 8,
  },
  tipText: {
    fontSize: 12,
    color: '#92400E',
    marginLeft: 8,
    flex: 1,
  },
  warningsList: {
    marginBottom: -8,
  },
  warningItem: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    padding: 8,
    backgroundColor: '#FEE2E2',
    borderRadius: 8,
    marginBottom: 8,
  },
  warningItemText: {
    fontSize: 12,
    color: '#B91C1C',
    marginLeft: 8,
    flex: 1,
  },
});

export default DietPlanDisplay;
